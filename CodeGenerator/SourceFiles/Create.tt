<#@ output extension=".cs" #>
<#@parameter name="EntityName" #>
<#@parameter name="PluralEntityName" #>
<#@parameter name="CamelEntityName" #>
<#@parameter name="ParamEntityName" #>
<#@parameter name="SentenceEntityName" #>
<#@parameter name="ServiceName" #>
<#@parameter name="LowerServiceName" #>
using Ardalis.ApiEndpoints;
using Microsoft.AspNetCore.Mvc;
using SAMP.Application.Models.<#= EntityName #>;
using Swashbuckle.AspNetCore.Annotations;
using SAMP.Application.Services;
using SAMP.Domain.Result;

namespace SAMP.WebApi.Endpoints.<#= EntityName #>;

public class Create(I<#= ServiceName #>Service <#= LowerServiceName #>Service) : EndpointBaseAsync.WithRequest<<#= EntityName #>CreateRequest>.WithActionResult
{
    [HttpPost("api/<#= ParamEntityName #>")]
    [SwaggerOperation(
        Description = "Create",
        OperationId = "<#= PluralEntityName #>.Create",
        Tags = new[] { "<#= SentenceEntityName #>" }
    )]
    public override async Task<ActionResult> HandleAsync(CancellationToken cancellationToken = default)
    {
        var result = await <#= ServiceName #>Service.Create<#= EntityName #>Async();
        return result.ToActionResult(this);
    }
}