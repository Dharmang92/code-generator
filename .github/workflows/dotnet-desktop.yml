name: CodeGenerator - Windows Release

on:
  pull_request:
    branches: ["main"]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest
    # runs-on: self-hosted

    env:
      Solution_Name: CodeGenerator.sln
      Wpf_Project_Path: CodeGenerator\CodeGenerator.csproj
      Output_Dir: ${{ github.workspace }}\publish
      Rar_File: ${{ github.workspace }}\CodeGenerator.rar

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2

      - name: Restore the application
        run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
        env:
          Configuration: ${{ matrix.configuration }}

      - name: Publish the WPF Application
        run: |
          dotnet publish $env:Wpf_Project_Path -c $env:Configuration -o $env:Output_Dir
        env:
          Configuration: ${{ matrix.configuration }}

      - name: Compress the published output into .rar
        run: |
          choco install 7zip -y
          # Remove-Item -Force -Path $env:Rar_File
          7z a -tzip $env:Rar_File $env:Output_Dir\*
        env:
          Configuration: ${{ matrix.configuration }}

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: "6.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.0.0

      - name: Create and Push git tag
        run: |
          git tag ${{ steps.gitversion.outputs.GITVERSION_MajorMinorPatch }}
          git push origin ${{ steps.gitversion.outputs.GITVERSION_MajorMinorPatch }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.gitversion.outputs.GITVERSION_MajorMinorPatch }}
          release_name: ${{ steps.gitversion.outputs.GITVERSION_MajorMinorPatch }}
          draft: false
          prerelease: false

      - name: Upload .rar to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}\CodeGenerator.rar
          asset_name: CodeGenerator.rar
          asset_content_type: application/octet-stream
